From bbb760de09769b4ab8b8e9d0255e1f5d58ed9782 Mon Sep 17 00:00:00 2001
From: jim <jim.yuan@supermicro.com>
Date: Tue, 4 Oct 2016 16:07:44 -0700
Subject: [PATCH] VDDR patch for p8dtu.

---
 src/usr/hwpf/hwp/dram_training/palmetto_vddr.C | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/src/usr/hwpf/hwp/dram_training/palmetto_vddr.C b/src/usr/hwpf/hwp/dram_training/palmetto_vddr.C
index b0f6bed..95c3924 100644
--- a/src/usr/hwpf/hwp/dram_training/palmetto_vddr.C
+++ b/src/usr/hwpf/hwp/dram_training/palmetto_vddr.C
@@ -168,6 +168,7 @@ static errlHndl_t for_each_vddr_domain_with_functional_memory(
     std::sort(l_membufTargetList.begin(), l_membufTargetList.end(),
         compareTargetsGpioInfos);
 
+/*
     // Prune out targets with non-unique GPIO info
     std::vector<TARGETING::TargetHandle_t>::iterator
         pInvalidEntries = std::unique(
@@ -175,6 +176,7 @@ static errlHndl_t for_each_vddr_domain_with_functional_memory(
             l_membufTargetList.end(),
             areTargetsGpioInfoEqual);
     l_membufTargetList.erase(pInvalidEntries,l_membufTargetList.end());
+*/
 
     // Invoke callback for one Centaur per unique VDDR domain
     for (TargetHandleList::iterator
@@ -274,6 +276,7 @@ static errlHndl_t pca95xGpioWriteBit(TARGETING::Target * i_target,
                            i_val);
 
     // Configure gpio bit as output (if necessary).
+/*    
     if(!err)
     {
         err = pca95xGpioSetBit(i_target,
@@ -281,6 +284,7 @@ static errlHndl_t pca95xGpioWriteBit(TARGETING::Target * i_target,
                                i_gpio_pin,
                                PCA95X_GPIO_CONFIG_OUTPUT);
     }
+*/
 
     return err;
 }
-- 
2.9.2.windows.1

