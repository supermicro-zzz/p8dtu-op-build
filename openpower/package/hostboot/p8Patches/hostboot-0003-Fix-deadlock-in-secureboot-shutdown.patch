From d9f391e4e63572c7dfd3130ffe99c2490194d877 Mon Sep 17 00:00:00 2001
From: Stephen Cprek <smcprek@us.ibm.com>
Date: Tue, 18 Oct 2016 12:31:56 -0500
Subject: [PATCH] Fix deadlock in secureboot shutdown and ensure a clean
 shutdown

- Do shutdown in background to fix deadlock when handling secureboot failures
- Remove CONSOLE::flush() as the console module is not running yet
- Ensure SpnorRp and VfsRp msg handlers return bad rc's to prevent further
  insructions from running.

Change-Id: Ica3b10b3b2740193819092dbade9313f3fe1fcc3
---
 src/build/mkrules/hbfw/img/makefile |  3 ++-
 src/usr/pnor/spnorrp.C              | 45 +++++++++++++++++++++++++------------
 src/usr/pnor/spnorrp.H              |  5 ++++-
 src/usr/secureboot/base/service.C   |  3 +--
 src/usr/vfs/vfsrp.C                 |  2 --
 5 files changed, 38 insertions(+), 20 deletions(-)

diff --git a/src/build/mkrules/hbfw/img/makefile b/src/build/mkrules/hbfw/img/makefile
index 7e1b7bb..9240aa2 100755
--- a/src/build/mkrules/hbfw/img/makefile
+++ b/src/build/mkrules/hbfw/img/makefile
@@ -105,7 +105,8 @@ gen_default_images: cp_hbfiles
 	# HBI + HBB partitions and ZERO_FILL_IMAGES
 	${GEN_PNOR_IMAGE_SCRIPT} --build-all ${TARGET_TEST:b--test} \
 		${CONFIG_SECUREBOOT:b--secureboot} --systemBinFiles ${GEN_DEFAULT_BIN_FILES} \
-		--pnorLayout ${DEFAULT_PNOR_LAYOUT} ${KEY_TRANSITION:b--key-transition}
+		--pnorLayout ${DEFAULT_PNOR_LAYOUT} ${KEY_TRANSITION:b--key-transition} \
+		${CORRUPT_PARAMS}
 
 clobber_gen_default_images:
 	rm -f ${ALL_HB_IMAGES} \
diff --git a/src/usr/pnor/spnorrp.C b/src/usr/pnor/spnorrp.C
index 2da74cb..8a66a18 100644
--- a/src/usr/pnor/spnorrp.C
+++ b/src/usr/pnor/spnorrp.C
@@ -261,11 +261,12 @@ void SPnorRP::initDaemon()
 /**
  * @brief  Load secure sections into temporary address space and verify them
  */
-void SPnorRP::verifySections(LoadRecord* o_rec, SectionId i_id)
+uint64_t SPnorRP::verifySections(SectionId i_id, LoadRecord* o_rec)
 {
     SectionInfo_t l_info;
     errlHndl_t l_errhdl = NULL;
     bool failedVerify = false;
+    uint64_t l_rc = 0;
 
     do {
         l_errhdl = getSectionInfo(i_id, l_info);
@@ -450,6 +451,7 @@ void SPnorRP::verifySections(LoadRecord* o_rec, SectionId i_id)
 
     if( l_errhdl )
     {
+        l_rc = EACCES;
         uint32_t l_errPlid = l_errhdl->plid();
         iv_startupRC = l_errhdl->reasonCode();
         TRACFCOMP(g_trac_pnor,ERR_MRK"SPnorRP::verifySections there was an error");
@@ -461,9 +463,11 @@ void SPnorRP::verifySections(LoadRecord* o_rec, SectionId i_id)
         else
         {
             errlCommit(l_errhdl,PNOR_COMP_ID);
-            INITSERVICE::doShutdown(l_errPlid);
+            INITSERVICE::doShutdown(l_errPlid, true);
         }
     }
+
+    return l_rc;
 }
 
 
@@ -590,15 +594,25 @@ void SPnorRP::waitForMessage()
                     {
                         SectionId l_id =
                                     static_cast<SectionId>(message->data[0]);
-                        if (iv_loadedSections[l_id] == NULL)
+                        do
                         {
-                            LoadRecord* l_record = new LoadRecord;
-                            verifySections(l_record,l_id);
-                            iv_loadedSections[l_id] = l_record;
+                            if (iv_loadedSections[l_id] == NULL)
+                            {
+                                LoadRecord* l_record = new LoadRecord;
+                                uint64_t l_rc = verifySections(l_id, l_record);
+                                if (l_rc)
+                                {
+                                    delete l_record;
+                                    l_record = NULL;
+                                    status_rc = -l_rc;
+                                    break;
+                                }
+                                iv_loadedSections[l_id] = l_record;
 
-                            // cache the record to use fields later as hints
-                            l_rec = *l_record;
-                        }
+                                // cache the record to use fields later as hints
+                                l_rec = *l_record;
+                            }
+                        } while (0);
                     }
                     break;
 
@@ -689,16 +703,18 @@ errlHndl_t PNOR::loadSecureSection(const SectionId i_section)
     //    err = reinterpret_cast<errlHndl_t>(msg->data[1]);
     //}
     //else remove the if clause below at some point
-    if (rc != 0)
+    if (rc != 0 || msg->data[1])
     {
+        // Use rc if non-zero, msg data[1] otherwise.
+        uint64_t l_rc = (rc) ? rc : msg->data[1];
 
-        TRACFCOMP(g_trac_pnor,ERR_MRK"PNOR::loadSecureSection> Error from msg_sendrecv rc=%d",
-                  rc );
+        TRACFCOMP(g_trac_pnor,ERR_MRK"PNOR::loadSecureSection> Error from msg_sendrecv or msg->data[1] rc=0x%X",
+                  l_rc );
         /* @errorlog
          * @severity          ERRL_SEV_CRITICAL_SYS_TERM
          * @moduleid          MOD_PNORRP_LOADSECURESECTION
          * @reasoncode        RC_EXTERNAL_ERROR
-         * @userdata1         returncode from msg_sendrecv()
+         * @userdata1         returncode from msg_sendrecv() or msg->data[1]
          * @userdata2[0:31]   SPNOR message type [LOAD | UNLOAD]
          * @userdata2[32:63]  Section ID
          * @devdesc           Could not load/unload section.
@@ -709,11 +725,12 @@ errlHndl_t PNOR::loadSecureSection(const SectionId i_section)
                          ERRORLOG::ERRL_SEV_CRITICAL_SYS_TERM,
                          MOD_PNORRP_LOADSECURESECTION,
                          RC_EXTERNAL_ERROR,
-                         rc,
+                         l_rc,
                          TWO_UINT32_TO_UINT64(PNOR::MSG_LOAD_SECTION,
                                               i_section),
                          true /* Add HB Software Callout */);
         err->collectTrace(PNOR_COMP_NAME);
+        err->collectTrace(SECURE_COMP_NAME);
     }
     msg_free(msg);
     return err;
diff --git a/src/usr/pnor/spnorrp.H b/src/usr/pnor/spnorrp.H
index 9f7e533..2f9bfcf 100644
--- a/src/usr/pnor/spnorrp.H
+++ b/src/usr/pnor/spnorrp.H
@@ -121,8 +121,11 @@ class SPnorRP
 
     /**
      * @brief Load secure sections into temporary address space and verify them
+     * @param[in]  i_secId - PNOR section id to verify
+     * @param[in]  o_rec - Load record to store section information in
+     * @return  uint64_t - Return code to pass back to message handler
      */
-    void verifySections(LoadRecord* o_rec, PNOR::SectionId i_id);
+    uint64_t verifySections(PNOR::SectionId i_id, LoadRecord* o_rec);
 
     /**
      * @brief  Message receiver for secure space
diff --git a/src/usr/secureboot/base/service.C b/src/usr/secureboot/base/service.C
index 300021a..6f25ac0 100644
--- a/src/usr/secureboot/base/service.C
+++ b/src/usr/secureboot/base/service.C
@@ -297,7 +297,6 @@ void handleSecurebootFailure(errlHndl_t &i_err)
 #ifdef CONFIG_CONSOLE
     CONSOLE::displayf(SECURE_COMP_NAME, "Secureboot Failure plid = 0x%08X, rc = 0x%04X\n",
                       i_err->plid(), l_rc);
-    CONSOLE::flush();
 #endif
     printk("Secureboot Failure plid = 0x%08X, rc = 0x%04X\n",
            i_err->plid(),l_rc);
@@ -308,7 +307,7 @@ void handleSecurebootFailure(errlHndl_t &i_err)
     errlCommit(i_err, SECURE_COMP_ID);
 
     // Shutdown with Secureboot error status
-    INITSERVICE::doShutdown(l_rc);
+    INITSERVICE::doShutdown(l_rc, true);
 }
 
 }  //namespace SECUREBOOT
diff --git a/src/usr/vfs/vfsrp.C b/src/usr/vfs/vfsrp.C
index 468cc6c..55a43b3 100644
--- a/src/usr/vfs/vfsrp.C
+++ b/src/usr/vfs/vfsrp.C
@@ -353,8 +353,6 @@ void VfsRp::msgHandler()
                             if(l_errl)
                             {
                                 SECUREBOOT::handleSecurebootFailure(l_errl);
-                                // The previous call will never return, but
-                                // just in case set proper kernel rc.
                                 msg->data[1] = -EACCES;
                                 break;
                             }
-- 
1.8.2.2

